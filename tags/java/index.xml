<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Hugo Leonardo</title>
    <link>https://hugoltsp.github.io/tags/java/</link>
    <description>Recent content in Java on Hugo Leonardo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 24 Aug 2019 20:05:35 -0300</lastBuildDate>
    
	<atom:link href="https://hugoltsp.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Apache Kafka Principles</title>
      <link>https://hugoltsp.github.io/posts/kafka-principles/</link>
      <pubDate>Sat, 24 Aug 2019 20:05:35 -0300</pubDate>
      
      <guid>https://hugoltsp.github.io/posts/kafka-principles/</guid>
      <description>Apache Kafka is a high throughput distributed streaming system written in Scala and Java epominously named after the great novelist Franz Kafka. It can be used as a traditional messaging system in favor of JMS or AMQP and allows applications to publish/subscribe to data streams and any events (such as notifications etc) in a decoupled, real-time manner. In this post we&amp;rsquo;ll cover some key concepts and core architectural aspects of Kafka, along with some practical examples.</description>
    </item>
    
    <item>
      <title>Kotlin Collections and how it compares with Java Collections API</title>
      <link>https://hugoltsp.github.io/posts/kotlin-collections/</link>
      <pubDate>Sun, 16 Jun 2019 00:00:00 -0300</pubDate>
      
      <guid>https://hugoltsp.github.io/posts/kotlin-collections/</guid>
      <description>We developers usually write software that uses collections on a daily basis, code that deals with things such as fetching a list of products from the database, writing a set of data to a file like CSV among other things are quite common. So let&amp;rsquo;s take a look on how Kotlin Collections work and how do they compare to Java Collections API.
Read-Only and Mutable collections   Overview of collections interfaces</description>
    </item>
    
  </channel>
</rss>