<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kotlin on Hugo Leonardo</title>
    <link>https://hugoltsp.github.io/tags/kotlin/</link>
    <description>Recent content in Kotlin on Hugo Leonardo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 08 Oct 2019 00:00:00 -0300</lastBuildDate>
    
	<atom:link href="https://hugoltsp.github.io/tags/kotlin/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Internal DSL&#39;s and Kotlin</title>
      <link>https://hugoltsp.github.io/posts/kotlin-dsl/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 -0300</pubDate>
      
      <guid>https://hugoltsp.github.io/posts/kotlin-dsl/</guid>
      <description>It&amp;rsquo;s safe to claim that programming languages, in a very broad sense, could be regarded as means to solve a myriad of problems, however sometimes it feels like some common issues are more specific than others, and that&amp;rsquo;s where a DSL fits in as it concerns addressing problems from a specific domain with simple and human readable code.
External and Internal DSL&amp;rsquo;s External DSL&amp;rsquo;s have their own syntax and can be run independently, for instance SQL for relational data manipulation, Gherkin for testing and HTML for web development are considered external DSL&amp;rsquo;s.</description>
    </item>
    
    <item>
      <title>Kotlin Collections and how it compares with Java Collections API</title>
      <link>https://hugoltsp.github.io/posts/kotlin-collections/</link>
      <pubDate>Sun, 16 Jun 2019 00:00:00 -0300</pubDate>
      
      <guid>https://hugoltsp.github.io/posts/kotlin-collections/</guid>
      <description>We developers usually write software that uses collections on a daily basis, code that deals with things such as fetching a list of products from the database, writing a set of data to a file like CSV among other things are quite common. So let&amp;rsquo;s take a look on how Kotlin Collections work and how do they compare to Java Collections API.
Read-Only and Mutable collections   Overview of collections interfaces</description>
    </item>
    
  </channel>
</rss>